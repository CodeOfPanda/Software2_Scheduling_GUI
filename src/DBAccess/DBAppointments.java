package DBAccess;

import Models.Appointments;
import Models.Contacts;
import Models.Customers;
import javafx.beans.property.ObjectProperty;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import utils.DBConnection;

import java.sql.*;
import java.time.LocalDateTime;

// dbName: WJ07K54

public class DBAppointments {

    public static ObservableList<Appointments> getAllAppts() {
        ObservableList<Appointments> apptList = FXCollections.observableArrayList();

        try {

            // My SQL statement
            String sql = "select * from WJ07K54.appointments;";
            PreparedStatement pStmt = DBConnection.getConnection().prepareStatement(sql);
            ResultSet rs = pStmt.executeQuery();


            while (rs.next()) {
                // getting the data from mySQL
                int appointmentID = rs.getInt("Appointment_ID");  // should be autogenerated
                String title = rs.getString("Title");
                String description = rs.getString("Description");
                String location = rs.getString("Location");
                String type = rs.getString("Type");
                LocalDateTime start = rs.getObject("Start", LocalDateTime.class); // unsure on if this will work found on Stack
                LocalDateTime end = rs.getObject("End", LocalDateTime.class);
                LocalDateTime createDate = rs.getObject("Create_Date", LocalDateTime.class);
                String createdBy = rs.getString("Created_By");
                Timestamp lastUpdate = rs.getTimestamp("Last_Update");
                String lastUpdatedBy = rs.getString("Last_Updated_By");
                int customerID = rs.getInt("Customer_ID");  // should be autogenerated
                int userID = rs.getInt("User_ID");  // should be autogenerated
                int contactID = rs.getInt("Contact_ID"); // should be autogenerated
                Appointments list = new Appointments(appointmentID, title, description, location, type, start, end
                        ,createDate, createdBy,lastUpdate, lastUpdatedBy, customerID, userID, contactID);
                apptList.add(list);
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        return apptList;
    }


    // method to create an appointment
    public static void createAppt(String title
            , String description
            , String location
            , String type
            , LocalDateTime start
            , LocalDateTime end
            , LocalDateTime createDate
            , String createdBy
            , LocalDateTime lastUpdate
            , String lastUpdatedBy
            , int customerID
            , int userID
            , int contactID
    )
    {
        try {
            // mySQL statement
            String createAppt = "INSERT INTO WJ07K54.appointments VALUES(null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);";
            PreparedStatement psCA = DBConnection.getConnection().prepareStatement(createAppt);
            // appointment_id is null here
            psCA.setString(1, title);
            psCA.setString(2, description);
            psCA.setString(3, location);
            psCA.setString(4, type);
            psCA.setObject(5, start);
            psCA.setObject(6, end);
            psCA.setObject(7, createDate);
            psCA.setString(8, createdBy);
            psCA.setObject(9, lastUpdate);
            psCA.setString(10,lastUpdatedBy);
            psCA.setInt(11, customerID);
            psCA.setInt(12, userID);
            psCA.setInt(13, contactID);

            psCA.execute();

        }
        catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // method to modify an appointment
    public static void modifyAppt(int appt_ID
            , String title
            , String description
            , String location
            , String type
            , LocalDateTime start
            , LocalDateTime end
            , LocalDateTime lastUpdate
            , String lastUpdatedBy
            , int customerID
            , int userID
            , int contactID)
    {
        try {
            // mySQL statement
            String sqlUpdate = "update WJ07K54.appointments " +
                    "set Title=?, Description=? ,Location=?, Type=?, Start=?, End=?, Last_Update=?" +
                    ", Last_Updated_By=?, Customer_ID=?, User_ID=?, Contact_ID=? " +
                    "where Appointment_ID=?;";
            PreparedStatement psUpdate = DBConnection.getConnection().prepareStatement(sqlUpdate);
            psUpdate.setString(1, title);
            psUpdate.setString(2, description);
            psUpdate.setString(3, location);
            psUpdate.setObject(4, type);
            psUpdate.setObject(5, start);
            psUpdate.setObject(6, end);
            psUpdate.setObject(7, lastUpdate);
            psUpdate.setString(8, lastUpdatedBy);
            psUpdate.setInt(9, customerID);
            psUpdate.setInt(10, userID);
            psUpdate.setInt(11, contactID);
            psUpdate.setInt(12, appt_ID);

            psUpdate.execute();
        }
        catch (SQLException e) {
            e.printStackTrace();
        }
    }
//
//    // method to delete an appointment
//    public static void deleteAppt() {
//        try {
//            // mySQL statement
//        }
//        catch () {
//
//        }
//    }

}
